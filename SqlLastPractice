use Course

create table Users(
    [Id] int primary key identity(1,1),
    [Name] nvarchar(50),
    [Email] nvarchar(100)
)
create table Doctors(
    [Id] int primary key identity(1,1),
    [Name] nvarchar(50),
    [Email] nvarchar(100)
)

SELECT * from Users
UNION
select * from Doctors

SELECT * from Users
UNION ALL
select * from Doctors

SELECT [Name],[Email] FROM Users
union ALL
Select [Name],[Email]  from Teachers

SELECT [Name],[Email] FROM Users
union ALL
Select [Name],[Email]  from Teachers
union ALL
Select [Name],[Email] from Doctors


SELECT * from Users
INTERSECT
select * from Doctors

SELECT * from Users
EXCEPT
select * from Doctors

SELECT * from Doctors
Except
select * from Users

select * from Students

select Count(*) as 'Student Age count', [Age] 
from Students
GROUP By[Age]

declare @num1 int=50;
declare @num2 int=30;
if @num1>@num2
print 'Yes'
ELSE
print 'No'

select * from Students
select * from Teachers

create function dbo.getStudentsAvgAge()
returns INT
AS
BEGIN
return(Select Avg([Age]) from Students)
End

create function dbo.getTeachersAvgAge()
returns INT
AS
BEGIN
return(Select Avg([Age]) from Teachers)
End


 create procedure usp_checkStudentsAndTeachersAvgAges
@studentAvgAge int,
@teacherAvgAge INT
as 
BEGIN
    IF @studentAvgAge>@teacherAvgAge
        print 'Yes'
    ELSE
        print 'NO'
END

declare @stuAvgAge int = (select dbo.getStudentsAvgAge())
declare @teachersAvgAge int = (select dbo.getTeachersAvgAge())

exec usp_checkStudentsAndTeachersAvgAges  @stuAvgAge,@teachersAvgAge

DECLARE @Counter INT 
SET @Counter=1
WHILE ( @Counter <= 10)
BEGIN
    PRINT 'The counter value is = ' + CONVERT(VARCHAR,@Counter)
    SET @Counter  = @Counter  + 1
END

USE AdventureWorks2014
GO
 
BEGIN TRY
  SELECT
    1 / 0 AS Error;
END TRY
BEGIN CATCH
  SELECT
    ERROR_NUMBER() AS ErrorNumber,
    ERROR_STATE() AS ErrorState,
    ERROR_SEVERITY() AS ErrorSeverity,
    ERROR_PROCEDURE() AS ErrorProcedure,
    ERROR_LINE() AS ErrorLine,
    ERROR_MESSAGE() AS ErrorMessage;
END CATCH;
GO
